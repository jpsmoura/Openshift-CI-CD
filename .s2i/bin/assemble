#!/bin/sh


# Maven arguments setting up the environment
#maven_env_args="-Dmaven.repo.local=${S2I_ARTIFACTS_DIR}/m2"

# =========================================================================
# Helper functions:

function check_error() {
  local label=$1
  local error=$2
  if [ ${error} -ne 0 ]; then
    echo "Aborting due to error code $error for $label"
    exit ${error}
  fi
}

function get_output_dir() {
  local dir=""

  # If multi module build and no ARTIFACT_DIR is set --> error
  if [ x"${ARTIFACT_DIR}" = x ]; then
    echo " ${MAVEN_ARGS} ${MAVEN_ARGS_APPEND}" | grep -q ' -pl'
    if [ $? -eq 0 ]; then
       echo "ARTIFACT_DIR must be set for multi module Maven builds"
       exit 1
    fi
    dir="${S2I_SOURCE_DIR}/target"
  else
    if [ "${ARTIFACT_DIR:0:1}" = "/" ]; then
       echo "ARTIFACT_DIR \"${ARTIFACT_DIR}\" must not be absolute but relative to the source directory"
       exit 1
    fi
    dir="${S2I_SOURCE_DIR}/${ARTIFACT_DIR}"
  fi

  # Normalize dir
  dir=$(echo ${dir} | tr -s /)
  dir=${dir%/}
  # The parent must exist but target/ won't exist yet
  if [ ! -d $(dirname "${dir}"}) ]; then
    echo "Please specify an existing build directory ARTIFACT_DIR (tried '$(dirname "${dir}")' which does not exist)"
    exit 1
  fi
  echo ${dir}
}

function copy_dir() {
  local src=$1
  local dest=$2

  cp -r ${src}/* ${dest}
  check_error "copying ${src} to ${dest}" $?
}

function setup_maven() {
  if [ -f "${S2I_SOURCE_DIR}/configuration/settings.xml" ]; then
    maven_env_args="${maven_env_args} -s ${S2I_SOURCE_DIR}/configuration/settings.xml"
    echo "Using custom maven settings from ${S2I_SOURCE_DIR}/configuration/settings.xml"
  fi
}

function build_maven() {
  # Where artifacts are created during build
  local build_dir=$1

  # Where to put the artifacts
  local app_dir=$2

  # Use main class if given
  local hawtapp_arg=""
  if [ x"${JAVA_MAIN_CLASS}" != x ]; then
    hawtapp_arg="-Dhawt-app.javaMainClass=${JAVA_MAIN_CLASS} io.fabric8:hawt-app-maven-plugin:${HAWTAPP_VERSION}:build"
  fi

  # Default args: no tests, if a module is specified, only build this module
  local maven_args=${MAVEN_ARGS:-package -DskipTests ${hawtapp_arg} -e}

  echo "Found pom.xml ... "
  echo "Running 'mvn ${maven_env_args} ${maven_args} ${MAVEN_ARGS_APPEND}'"

  local old_dir=$(pwd)
  cd ${S2I_SOURCE_DIR}
  check_error "changing directory to ${S2I_SOURCE_DIR}" $?

  # =========
  # Run Maven
  mvn ${maven_env_args} --version
  mvn ${maven_env_args} ${maven_args} ${MAVEN_ARGS_APPEND}
  check_error "Maven build" $?

  # ======================
  # After-build validation
  if [ ! -d "${build_dir}/hawt-app" ] && [ x"${JAVA_MAIN_CLASS}" = x ]; then
    echo "No JAVA_MAIN_CLASS specified and no hawt-app-maven-plugin configured in the pom.xml"
    exit 1
  fi

  # ==============
  # Copy artifacts
  echo "Copying Maven artifacts from ${build_dir}/hawt-app to ${app_dir} ..."
  copy_dir "${build_dir}/hawt-app" ${app_dir}

  # ======================
  # Remove repo if desired
  if [ "x${MAVEN_CLEAR_REPO}" != "x" ]; then
    rm -rf "${S2I_ARTIFACTS_DIR}/m2"
    check_error "Cannot remove local Maven repository ${S2I_ARTIFACTS_DIR}/m2" $?
  fi

  cd ${old_dir}
}

function get_from_nexus() {

  BUNDLE_NAME="${ARTIFACT_ID}-${ARTIFACT_VERSION}-${ARTIFACT_ID}.tar.gz"
  BUNDLE_FULL_PATH="${NEXUS_URL}${REPOSITORY_NAME}${GROUP_ID}${ARTIFACT_ID}/${ARTIFACT_VERSION}/$BUNDLE_NAME"
  #Simple test with Dropbox
  #BUNDLE_FULL_PATH="https://dl.dropboxusercontent.com/u/2426419/app-1.0-app.tar.gz"
  echo "Starting CURL Download from $BUNDLE_FULL_PATH"
  curl -H "Accept: application/zip" $BUNDLE_FULL_PATH -o ~/$BUNDLE_NAME
  if [ 0 -eq $? ]; then
    echo "Download complete"
  else
    echo "Failed to Download Release Bundle"
    exit 1
  fi;
  echo "Unzipping Tar from ~/$BUNDLE_NAME to ${DEPLOYMENTS_DIR}"
  tar -xvzf ~/$BUNDLE_NAME -C ${DEPLOYMENTS_DIR} --strip 1

}

# =========================================================================
# Main

echo "=================================================================="
echo "Starting S2I Java Build ....."
get_from_nexus
echo "... done"
